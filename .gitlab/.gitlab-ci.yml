stages:
  - test
  - build
  - create_release
  - build_push_docker

variables:
  DOCKER_IMAGE_TAG:
    value: "latest"
    description: "Docker image tag to push to DockerHub"

test:
  image: golang:1.19
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
  stage: test
  script:
    - go fmt $(go list ./internal/...)
    - go vet $(go list ./internal/...)
    - make test

build:
  image: golang:1.19
  stage: build
  script:
    - make build
  artifacts:
    paths:
      - cmd/qsim.out
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "main"

create_release:
  stage: create_release
  script:
    - git config --global user.email "jakub@korsak.xyz"
    - git config --global user.name "GitLab CI (JK)"
    - git tag $(date +'%Y%m%d%H%M%S')
    - git push --tags https://${PUSH_TOKEN_NAME}:${PUSH_TOKEN}@gitlab.com/korsakjakub/cs_q_sim.git
  only:
    - web

build_push_docker:
  image: docker:stable
  stage: build_push_docker
  variables:
    REPO_NAME: cs_q_sim
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_ACCESS_TOKEN
    - docker build -t $DOCKER_USERNAME/$REPO_NAME:$DOCKER_IMAGE_TAG -f build/Dockerfile .
    - docker push $DOCKER_USERNAME/$REPO_NAME:$DOCKER_IMAGE_TAG
  only:
   - web
