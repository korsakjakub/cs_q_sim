stages:
  - test
  - build
  - create_release
  - build_push_docker

test:
  image: golang:1.18
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
  stage: test
  script:
    - go fmt $(go list ./internal/...)
    - go vet $(go list ./internal/...)
    - make test

build:
  image: golang:1.18
  stage: build
  script:
    - make build
  artifacts:
    paths:
      - cmd/qsim.out
  only: 
    - main

create_release:
  stage: create_release
  script:
    - git config --global user.email "jakub@korsak.xyz"
    - git config --global user.name "GitLab CI (JK)"
    - git tag $(date +'%Y%m%d%H%M%S')
    - git push --tags https://${PUSH_TOKEN_NAME}:${PUSH_TOKEN}@gitlab.com/korsakjakub/cs_q_sim.git
  dependencies:
    - build
  only:
    - main

build_push_docker:
  image: docker:stable
  stage: build_push_docker
  variables:
    CI_DOCKER_REPO: $CI_REGISTRY/korsakjakub/cs_q_sim
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $CI_DOCKER_REPO:$CI_COMMIT_SHORT_SHA -f build/Dockerfile .
    - docker push $CI_DOCKER_REPO:$CI_COMMIT_SHORT_SHA
  only:
    - main
